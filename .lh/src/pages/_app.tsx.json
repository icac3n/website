{
    "sourceFile": "src/pages/_app.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1709998312027,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1709998322066,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n             <SessionProvider>\n                 <ToastThemeWrapper/>\n                 <Navbar/>\n \n-                {/* <MessageFlashSlider/> */}\n+                <MessageFlashSlider/>\n                 {\n                     Component.pageLayout ?\n                         (\n                             <Component.pageLayout {...pageProps}>\n"
                }
            ],
            "date": 1709998312027,
            "name": "Commit-0",
            "content": "import '../styles/globals.css'\nimport React, {ComponentType, useEffect, useState} from \"react\";\nimport type {AppProps} from \"next/app\";\nimport {ThemeProvider, useTheme} from \"next-themes\";\nimport {Theme, toast, ToastContainer} from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport {Footer, Navbar, MessageFlashSlider} from \"components\";\n\nimport { SessionProvider } from \"next-auth/react\"\nimport { Analytics } from '@vercel/analytics/react';\nimport Image from \"next/image\";\nimport {TailwindIndicator} from \"@/components/ui/tailwind-indicator\";\n\ntype ComponentWithLayout = AppProps & {\n    Component: AppProps['Component'] & {\n        pageLayout?: ComponentType\n    }\n}\n\nexport default function App({Component, pageProps}: ComponentWithLayout) {\n    return (\n        <ThemeProvider attribute=\"class\" enableSystem={true} forcedTheme=\"light\">\n            <SessionProvider>\n                <ToastThemeWrapper/>\n                <Navbar/>\n\n                {/* <MessageFlashSlider/> */}\n                {\n                    Component.pageLayout ?\n                        (\n                            <Component.pageLayout {...pageProps}>\n                                <Component {...pageProps}/>\n                            </Component.pageLayout>\n                        )\n                        :\n                        (\n                            <div className={'max-w-7xl mx-auto py-6 sm:px-6 lg:px-8'}>\n                                <Component {...pageProps}/>\n                            </div>\n                        )\n                }\n                <Footer/>\n                <Analytics />\n                <TailwindIndicator />\n            </SessionProvider>\n        </ThemeProvider>\n    );\n}\n\nconst ToastThemeWrapper = () => {\n    const {theme, systemTheme} = useTheme();\n\n    const [toastTheme, setToastTheme] = useState<Theme>(\"dark\");\n\n    useEffect(() => {\n        if (theme === \"dark\") {\n            setToastTheme(\"dark\");\n        } else if (theme === \"light\") {\n            setToastTheme(\"light\");\n        } else if (theme === \"system\") {\n            if (systemTheme === \"dark\") {\n                setToastTheme(\"dark\");\n            } else if (systemTheme === \"light\") {\n                setToastTheme(\"light\");\n            }\n        }\n    }, [theme, systemTheme]);\n\n    const [toastPosition, setToastPosition] = useState(toast.POSITION.TOP_RIGHT);\n\n    useEffect(() => {\n        setToastPosition(\n            window.innerWidth > 1024\n                ? toast.POSITION.TOP_RIGHT\n                : toast.POSITION.BOTTOM_CENTER\n        );\n    }, []);\n\n    return (\n        <ToastContainer\n            className={\"relative mt-20 \"}\n            //position top-right on large screens and bottom-center on small screens\n            position={toastPosition}\n            theme={toastTheme}\n        />\n    );\n};\n"
        }
    ]
}